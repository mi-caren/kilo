
* dbuf_free -> check se buf != NULL


* Creare struct String
    struct FileLine {
        char* chars;
        int len;
    }

    Specifica per le linee di testo nel file aperto


* Creare struct EditorFile

    struct EditorFile {
        String lines;
        int numlines;
    }


* enum EditorError

    Far ritornare i valori alla funzione e poi avere una
    funzione che mappi questi status code in una stringa

    if (status = func() != OK)
        return status;

* Prima di salvare scrivere prima in un file di backup per evitare perdita di dati

* controllare in tutti i punti in cui c'è bisogno di gestire gli errori

* ctrl-d delete line

* copy - paste

* mouse support

* tab insert spaces

* auto indent

* ctrl-g
	go to line number

* render trailing spaces

* show modified and new lines by colouring line number

* quando si cerca, mostrare il numero di match trovati nella message bar

* control enter per creare una nuova riga sotto

* creare un editor key NO_OP, in caso non venga riconosciuta una escape sequence invece di ritornare semplicemente '\x1b', che ha n significato per l'edior

* fare in modo che le editor keys siano fatte in modo da confrontarle con delle flag per capire se c'è qualche modificatore premuto